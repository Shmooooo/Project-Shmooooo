def binomialPlot(n, p) :
    """
    Function to plot the entire binomial distribution for a given number of trials, n,
    and the probability of success, p.
    """

# import required libraries

    from math import factorial  
    from matplotlib import use
#    from matplotlib.pyplot import plot, savefig, show
    import matplotlib.pyplot as plt
    from scipy import zeros
    
#    use( 'Agg' ) # use file output instead of a graphical window

# define check variables to be used later to warn of correction attempts by the funciton

    n_ = n                         

# invalid probability stops function and warns user 
    
    if p > 1 or p < 0: 
        print "Invalid probability. p must be less than or equal to 1 and greater than or equal to 0. Supplied:", p  
        return None

# attempt to correct invalid values of n
    
    n = int(abs(n))
    
# create list with probabilities for each number of successes possible                                   

    probs = [factorial(n)*(p**i)*((1-p)**(n-i))/(factorial(i)*factorial(n-i)) for i in range(n+1)]

# notifies user of corrections

#    if n != n_:
#        print n_, "is not a nonnegative integer. Using n =", n, "instead."

# clear axes and figure, plot

    plt.cla()
    plt.clf()

    plt.plot(probs,'k.')
    plt.ylabel('Probability')
    plt.xlabel('Number of successes')
    plt.savefig("binomialplot.png", dpi=50) #!!

if __name__ == '__main__' :
    
    # constants
    n = 30 # the number of experiments
    p = 1/6. # the probability of 'success'

    print """
    This program plots the binomial distribution, B( k; n, p ), for an
    experiment in which a die is rolled 30 times (ie n=30) and 'success' is
    rolling a one (ie p=1/6).
    """

    # call the function 
    binomialPlot( n, p )
